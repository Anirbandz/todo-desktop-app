<div class="profile-section">
  <h2>Profile</h2>
  <div class="profile-picture">
    <img src="<%= user.profilePicture ? user.profilePicture : '/images/logo.png' %>" alt="Profile Picture" width="100" height="100">
    <form id="profilePicForm" enctype="multipart/form-data" method="POST" action="/dashboard/profile/picture">
      <input type="file" name="profilePicture" accept="image/*" required>
      <button type="submit" class="btn btn-primary btn-small">Update Picture</button>
    </form>
  </div>
  <form id="nameForm" method="POST" action="/dashboard/profile/name">
    <div class="form-group">
      <label for="name">Name</label>
      <input type="text" id="name" name="name" value="<%= user.name %>" required>
    </div>
    <button type="submit" class="btn btn-primary btn-small">Update Name</button>
  </form>
  <form id="passwordForm" method="POST" action="/dashboard/profile/password">
    <div class="form-group">
      <label for="currentPassword">Current Password</label>
      <input type="password" id="currentPassword" name="currentPassword" required>
    </div>
    <div class="form-group">
      <label for="newPassword">New Password</label>
      <input type="password" id="newPassword" name="newPassword" required>
    </div>
    <div class="form-group">
      <label for="confirmPassword">Confirm New Password</label>
      <input type="password" id="confirmPassword" name="confirmPassword" required>
    </div>
    <button type="submit" class="btn btn-primary btn-small">Change Password</button>
  </form>
  <div class="theme-section">
    <h3>Theme Settings</h3>
    <div class="form-group">
      <label for="themeSelect">Choose Theme</label>
      <select id="themeSelect" name="theme">
        <option value="light" <%= user.theme === 'light' ? 'selected' : '' %>>Light Mode</option>
        <option value="dark" <%= user.theme === 'dark' ? 'selected' : '' %>>Dark Mode</option>
      </select>
    </div>
    <button type="button" class="btn btn-primary btn-small" onclick="applyThemeFromSelect()">Apply Theme</button>
  </div>
  
  <div class="logout-section">
    <h3>Account Settings</h3>
    <div class="logout-warning">
      <i class="fas fa-exclamation-triangle"></i>
      <p>Clicking logout will end your current session and redirect you to the login page.</p>
    </div>
    <button type="button" class="btn btn-danger btn-full" onclick="confirmLogout()">
      <i class="fas fa-sign-out-alt"></i>
      Logout
    </button>
  </div>
  
  <div class="about-section">
    <h3>About TaskFlow</h3>
    <p><strong>TaskFlow Desktop</strong></p>
    <p>Version <span id="appVersion">1.0.0</span></p>
    <p>A modern desktop todo application built with Electron and Express.</p>
    
    <div class="update-section">
      <h4>Updates</h4>
      <p>Keep your app up to date with the latest features and improvements.</p>
      <div class="update-actions">
        <button class="btn btn-primary" onclick="checkForUpdates()" id="checkUpdateBtn">
          <i class="fas fa-sync-alt"></i> Check for Updates
        </button>
        <span id="updateStatus" class="update-status"></span>
      </div>
      <div id="updateInfo" class="update-info" style="display: none;">
        <p><strong>Latest Version:</strong> <span id="latestVersion"></span></p>
        <p><strong>Release Notes:</strong></p>
        <div id="releaseNotes" class="release-notes"></div>
        <button class="btn btn-success" onclick="downloadUpdate()" id="downloadUpdateBtn" style="display: none;">
          <i class="fas fa-sync-alt"></i> Download Update
        </button>
      </div>
    </div>
  </div>
  
  <div id="profileMsg" style="margin-top:1rem;"></div>
</div>
<script>
// AJAX for profile forms
function handleProfileForm(formId, url, successMsg) {
  const form = document.getElementById(formId);
  if (!form) return;
  form.addEventListener('submit', async function(e) {
    e.preventDefault();
    const formData = new FormData(form);
    let options = { method: 'POST' };
    if (formId === 'profilePicForm') {
      options.body = formData;
    } else {
      options.headers = { 'Content-Type': 'application/json' };
      options.body = JSON.stringify(Object.fromEntries(formData));
    }
    const res = await fetch(url, options);
    const data = await res.json();
    const msgDiv = document.getElementById('profileMsg');
    if (data.success) {
      msgDiv.textContent = successMsg;
      if (formId === 'profilePicForm') {
        document.querySelector('.profile-picture img').src = data.profilePicture;
      }
    } else {
      msgDiv.textContent = data.message || 'Update failed.';
    }
    setTimeout(() => { msgDiv.textContent = ''; }, 3000);
  });
}

// Theme application function
function applyThemeFromSelect() {
  const themeSelect = document.getElementById('themeSelect');
  const selectedTheme = themeSelect.value;
  
  // Apply theme immediately
  changeTheme(selectedTheme);
  localStorage.setItem('userTheme', selectedTheme);
  
  // Save to server
  fetch('/dashboard/profile/theme', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ theme: selectedTheme })
  })
  .then(response => response.json())
  .then(data => {
    if (data.success) {
      document.getElementById('profileMsg').textContent = 'Theme updated successfully!';
    } else {
      document.getElementById('profileMsg').textContent = 'Failed to update theme.';
    }
    setTimeout(() => { document.getElementById('profileMsg').textContent = ''; }, 3000);
  })
  .catch(error => {
    console.error('Error updating theme:', error);
    document.getElementById('profileMsg').textContent = 'Error updating theme.';
    setTimeout(() => { document.getElementById('profileMsg').textContent = ''; }, 3000);
  });
}

// Logout confirmation function
function confirmLogout() {
  if (confirm('Are you sure you want to logout? You will be redirected to the login page.')) {
    window.location.href = '/auth/logout';
  }
}

handleProfileForm('profilePicForm', '/dashboard/profile/picture', 'Profile picture updated!');
handleProfileForm('nameForm', '/dashboard/profile/name', 'Name updated!');
handleProfileForm('passwordForm', '/dashboard/profile/password', 'Password updated!');
</script> 